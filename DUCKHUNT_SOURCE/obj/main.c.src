	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, _palette
	ld	de, 16
	ld	bc, 0
	push	bc
	push	de
	push	hl
	call	_gfx_SetPalette
	pop	hl
	pop	hl
	pop	hl
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, -16
	push	hl
	call	_gfx_SetTransparentColor
	pop	hl
	call	_vars_int
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, -1
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 225
	push	hl
	ld	hl, 258
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, 31
	push	hl
	call	_gfx_Rectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB0_1:
	ld	hl, (_ext)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_3
	call	_kb_Scan
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	ld	(_key), a
	call	_player_keys
	ld	hl, 16
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 223
	push	hl
	ld	hl, 256
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, 32
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	call	_draw_enemies
	call	_draw_scene
	call	_Debug
	call	_draw_player
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	jq	BB0_1
BB0_3:
	ld	hl, (_sprite_buff)
	push	hl
	call	_free
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	jp	_gfx_End
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vars_int
_vars_int:
	ld	bc, 0
	ld	hl, 1
	ld	iy, 160
	ld	(_player), iy
	ld	de, 120
	ld	(_player+3), de
	ld	(_player+6), bc
	ld	de, 5
	ld	(_player+9), de
	ld	(_lvl), hl
	ld	(_dog+15), bc
	ld	(_dog+12), hl
	inc	hl
	push	hl
	push	hl
	call	_init_enemies
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_player_keys
_player_keys:
	ld	a, (_key)
	sub	a, 1
	ld	de, 0
	cp	a, 8
	jq	c, BB2_4
BB2_1:
	call	_player_keys_other
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 64
	jq	nz, BB2_3
	ld	hl, 1
	ld	(_ext), hl
BB2_3:
	ret
BB2_4:
	ld	e, a
	ld	hl, LJTI2_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB2_5:
	ld	de, (_player+3)
	ld	iy, (_player+9)
	add	iy, de
	ld	de, 222
	lea	hl, iy + 0
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB2_18
	ld	(_player+3), iy
	jq	BB2_1
BB2_7:
	ld	hl, (_player)
	ld	de, (_player+9)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 41
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB2_13
	ld	(_player), de
	jq	BB2_1
BB2_9:
	ld	de, (_player)
	ld	iy, (_player+9)
	add	iy, de
	ld	de, 279
	lea	hl, iy + 0
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB2_15
	ld	(_player), iy
	jq	BB2_1
BB2_11:
	ld	hl, (_player+3)
	ld	de, (_player+9)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 17
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB2_16
	ld	(_player+3), de
	jq	BB2_1
BB2_13:
	ld	hl, 40
	jq	BB2_14
BB2_15:
	ld	hl, 279
BB2_14:
	ld	(_player), hl
	jq	BB2_1
BB2_16:
	ld	hl, 16
	jq	BB2_17
BB2_18:
	ld	hl, 222
BB2_17:
	ld	(_player+3), hl
	jq	BB2_1
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI2_0:
	private	LJTI2_0
LJTI2_0:
	dl	BB2_5
	dl	BB2_7
	dl	BB2_1
	dl	BB2_9
	dl	BB2_1
	dl	BB2_1
	dl	BB2_1
	dl	BB2_11

	section	.text,"ax",@progbits
	public	_draw_enemies
_draw_enemies:
	ld	hl, -21
	call	__frameset
	ld	de, 0
	ld	hl, (_dog+15)
	dec	hl
	ld	bc, 2
	or	a, a
	sbc	hl, bc
	jq	nc, BB3_2
BB3_1:
	ld	sp, ix
	pop	ix
	ret
BB3_2:
	ld	iy, 23
BB3_3:
	ld	(_i), de
	ld	bc, (_enemies_amount)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB3_1
	ld	(ix + -3), bc
	push	de
	pop	hl
	lea	bc, iy + 0
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	lea	hl, iy + 0
	add	hl, bc
	ld	a, (hl)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	z, BB3_7
	ld	hl, (_amount_fallen)
	ld	de, (ix + -3)
	or	a, a
	sbc	hl, de
	jq	nz, BB3_40
	ld	hl, (_lvl)
	inc	hl
	push	hl
	ld	hl, 2
	push	hl
	call	_init_enemies
	pop	hl
	jq	BB3_39
BB3_7:
	ld	(ix + -3), de
	ex	de, hl
	ld	bc, 23
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	bc, (iy + 2)
	ld	de, (iy + 11)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	nz, BB3_10
	ld	hl, (ix + -3)
	ld	bc, 23
	call	__imulu
	push	hl
	pop	de
	ld	iy, _enemies
	add	iy, de
	ld	hl, (iy + 20)
	ld	iy, _enemies
	ld	de, (ix + -3)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_27
	call	_random
	ld	bc, 223
	call	__iremu
	ld	de, 32
	add	hl, de
	ld	(ix + -3), hl
	ld	de, (_i)
	push	de
	pop	hl
	ld	bc, 23
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	hl, (ix + -3)
	ld	(iy + 11), hl
	ld	iy, _enemies
	ld	bc, 23
	jq	BB3_27
BB3_10:
	ld	(ix + -12), iy
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	ld	(ix + -6), de
	ld	(ix + -9), bc
	jq	p, BB3_13
	ld	hl, (ix + -3)
	ld	bc, 23
	call	__imulu
	push	hl
	pop	de
	ld	iy, _enemies
	add	iy, de
	ld	hl, (iy + 8)
	lea	bc, iy + 0
	ld	(ix + -15), hl
	ld	de, (ix + -9)
	add	hl, de
	ld	iy, (ix + -12)
	ld	(ix + -9), hl
	ld	(iy + 2), hl
	push	bc
	pop	iy
	ld	hl, (iy + 20)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_12
	ld	hl, 1
	ld	(iy + 20), hl
BB3_12:
	ld	de, (ix + -15)
	ld	iy, _enemies
	ld	bc, (ix + -6)
	jq	BB3_20
BB3_13:
	ld	hl, (ix + -3)
	ld	bc, 23
	call	__imulu
	push	hl
	pop	de
	ld	hl, _enemies
	push	hl
	pop	iy
	add	iy, de
	ld	de, (iy + 8)
	ld	hl, (ix + -6)
	ld	bc, (ix + -9)
	push	bc
	pop	iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB3_17
	lea	hl, iy + 0
	ld	(ix + -15), de
	or	a, a
	sbc	hl, de
	ld	iy, (ix + -12)
	ld	(ix + -9), hl
	ld	(iy + 2), hl
	ld	hl, (ix + -3)
	ld	bc, 23
	call	__imulu
	push	hl
	pop	de
	ld	iy, _enemies
	add	iy, de
	ld	hl, (iy + 20)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_19
	ld	hl, 2
	ld	(iy + 20), hl
BB3_19:
	ld	iy, _enemies
	ld	bc, (ix + -6)
	ld	de, (ix + -15)
BB3_20:
	ld	hl, (ix + -9)
	jq	BB3_21
BB3_17:
	lea	hl, iy + 0
	ld	iy, _enemies
	ld	bc, (ix + -6)
BB3_21:
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	or	a, a
	sbc	hl, hl
	or	a, a
	sbc	hl, de
	ld	(ix + -9), hl
	ex	de, hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB3_26
	push	bc
	pop	hl
	ld	de, (ix + -9)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB3_26
	lea	de, iy + 0
	ld	iy, (ix + -12)
	ld	hl, (ix + -6)
	ld	(iy + 2), hl
	push	de
	pop	iy
BB3_26:
	ld	hl, 23
	push	hl
	pop	bc
	ld	de, (ix + -3)
BB3_27:
	ld	(ix + -3), de
	ex	de, hl
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	bc, (iy + 5)
	ld	de, (iy + 14)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jq	nz, BB3_30
	ld	hl, (ix + -3)
	ld	bc, 23
	call	__imulu
	push	hl
	pop	de
	ld	iy, _enemies
	add	iy, de
	ld	hl, (iy + 20)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_53
	call	_random
	ld	bc, 160
	call	__iremu
	ld	de, 8
	add	hl, de
	ld	(ix + -3), hl
	ld	de, (_i)
	push	de
	pop	hl
	ld	bc, 23
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	hl, (ix + -3)
	ld	(iy + 14), hl
	jq	BB3_36
BB3_30:
	ld	(ix + -15), iy
	ld	(ix + -9), bc
	push	bc
	pop	hl
	ld	(ix + -12), de
	or	a, a
	sbc	hl, de
	ld	(ix + -6), hl
	ld	hl, (ix + -3)
	ld	bc, 23
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	de, (iy + 8)
	or	a, a
	sbc	hl, hl
	or	a, a
	sbc	hl, de
	ld	(ix + -18), hl
	push	de
	pop	hl
	ld	bc, (ix + -6)
	push	bc
	pop	iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	(ix + -21), de
	jq	p, BB3_32
	ld	iy, _enemies
	ld	bc, 23
	ld	hl, (ix + -3)
	jq	BB3_34
BB3_32:
	lea	hl, iy + 0
	ld	de, (ix + -18)
	or	a, a
	sbc	hl, de
	call	__setflag
	ld	iy, _enemies
	ld	bc, 23
	ld	hl, (ix + -3)
	jq	m, BB3_34
	ld	iy, (ix + -15)
	ld	de, (ix + -12)
	ld	(iy + 5), de
	ld	iy, _enemies
	ld	(ix + -9), de
BB3_34:
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy + 17)
	ld	de, 7
	or	a, a
	sbc	hl, de
	jq	z, BB3_35
	ld	iy, (ix + -9)
	lea	hl, iy + 0
	ld	de, (ix + -12)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB3_44
	ld	de, (ix + -21)
	add	iy, de
	lea	hl, iy + 0
	ld	iy, (ix + -15)
	ld	(iy + 5), hl
	ld	hl, (ix + -3)
	ld	bc, 23
	call	__imulu
	push	hl
	pop	de
	ld	iy, _enemies
	add	iy, de
	ld	hl, (iy + 20)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB3_35
	ld	de, 2
	or	a, a
	sbc	hl, de
	jq	z, BB3_35
	ld	hl, 3
	jq	BB3_52
BB3_44:
	ex	de, hl
	lea	de, iy + 0
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB3_35
	lea	hl, iy + 0
	ld	de, (ix + -21)
	or	a, a
	sbc	hl, de
	ld	iy, (ix + -15)
	ld	(iy + 5), hl
	ld	hl, (ix + -3)
	ld	bc, 23
	call	__imulu
	push	hl
	pop	de
	ld	iy, _enemies
	add	iy, de
	ld	hl, (iy + 20)
	ld	de, 2
	or	a, a
	sbc	hl, de
	jq	c, BB3_35
	ld	hl, 4
BB3_52:
	ld	(iy + 20), hl
BB3_35:
	ld	de, (ix + -3)
BB3_36:
	ld	(ix + -3), de
	ex	de, hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	iy, _timers
	add	iy, de
	ld	bc, (iy)
	push	bc
	pop	hl
	ld	de, 101
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB3_38
	inc	bc
	ld	(iy), bc
BB3_38:
	ld	hl, (ix + -3)
	push	hl
	call	_animate_sprites
BB3_39:
	pop	hl
BB3_40:
	ld	de, (_i)
	inc	de
	ld	iy, 23
	jq	BB3_3
BB3_53:
	ld	hl, (_amount_fallen)
	inc	hl
	ld	(_amount_fallen), hl
	ld	bc, 23
	ld	hl, (ix + -3)
	call	__imulu
	push	hl
	pop	de
	ld	hl, _enemies
	add	hl, de
	ld	(hl), 0
	jq	BB3_1
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw_scene
_draw_scene:
	ld	hl, 5
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 34
	push	hl
	ld	hl, 256
	push	hl
	ld	hl, 156
	push	hl
	ld	hl, 32
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 41
	push	hl
	ld	hl, 256
	push	hl
	ld	hl, 190
	push	hl
	ld	hl, 32
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_Debug
_Debug:
	ld	hl, -1
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 32
	push	hl
	ld	hl, 41
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 278
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 280
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, (_dog)
	ld	de, -5
	add	hl, de
	ld	de, 3
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	ld	hl, 280
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.1
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, (_dog+3)
	ld	de, -5
	add	hl, de
	ld	de, 2
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 20
	push	hl
	ld	hl, 280
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.2
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, (_lvl)
	ld	de, 2
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw_player
_draw_player:
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (_player)
	ld	de, -5
	add	iy, de
	ld	hl, (_player+3)
	add	hl, de
	ld	de, 10
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -32
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (_player)
	ld	de, (_player+3)
	ld	bc, 8
	push	bc
	push	de
	push	hl
	call	_gfx_Circle
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_SetCostume
_SetCostume:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	iy, _enemies
	ld	bc, 23
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(iy + 17), de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_animate
_animate:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, _enemies
	ld	bc, 23
	call	__imulu
	push	hl
	pop	bc
	push	de
	pop	iy
	add	iy, bc
	ld	hl, (iy + 17)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	de, 9
	or	a, a
	sbc	hl, de
	jq	nc, BB8_1
	ld	de, 1
	ld	hl, LJTI8_0
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	jp	(hl)
BB8_3:
	ld	hl, 2
	jq	BB8_4
BB8_5:
	ld	hl, 5
	jq	BB8_4
BB8_6:
	ld	hl, 6
	jq	BB8_4
BB8_7:
	ld	hl, 9
	jq	BB8_4
BB8_8:
	ld	hl, 3
	jq	BB8_4
BB8_9:
	ld	de, 4
BB8_10:
	ld	(iy + 17), de
	ld	bc, 23
	ld	hl, (ix + 6)
	call	__imulu
	push	hl
	pop	de
	ld	hl, _enemies
	ld	(ix + -3), iy
	push	hl
	pop	iy
	add	iy, de
	ld	de, (iy + 20)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB8_15
	ld	hl, 7
	ld	iy, (ix + -3)
	jq	BB8_4
BB8_12:
	ld	bc, 3
	ld	hl, (ix + 6)
	call	__imulu
	push	hl
	pop	de
	ld	hl, _timers
	add	hl, de
	ld	hl, (hl)
	ld	de, 10
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	m, BB8_1
BB8_14:
	ld	hl, 8
	jq	BB8_4
BB8_15:
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	inc	bc
	or	a, a
	sbc	hl, bc
	ld	iy, (ix + -3)
	jq	nc, BB8_17
	ld	hl, 1
	jq	BB8_4
BB8_17:
	ex	de, hl
	ld	de, 3
	or	a, a
	sbc	hl, de
	dec	de
	or	a, a
	sbc	hl, de
	jq	nc, BB8_1
	ld	hl, 4
BB8_4:
	ld	(iy + 17), hl
BB8_1:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI8_0:
	private	LJTI8_0
LJTI8_0:
	dl	BB8_3
	dl	BB8_8
	dl	BB8_10
	dl	BB8_5
	dl	BB8_6
	dl	BB8_9
	dl	BB8_12
	dl	BB8_7
	dl	BB8_14

	section	.text,"ax",@progbits
	public	_animate_sprites
_animate_sprites:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix + -3), hl
	push	hl
	call	_animate
	pop	hl
	ld	bc, 23
	ld	hl, (ix + -3)
	call	__imulu
	push	hl
	pop	de
	ld	iy, _enemies
	add	iy, de
	ld	hl, (iy + 17)
	ld	de, 1
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 9
	or	a, a
	sbc	hl, bc
	jq	nc, BB9_26
	ld	hl, LJTI9_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB9_2:
	ld	hl, _Duck_A_1_data
	ld	(ix + -3), hl
	ld	de, (_i)
	ld	bc, 23
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	hl, (iy + 20)
	ld	bc, 2
	or	a, a
	sbc	hl, bc
	jq	nz, BB9_25
	ld	hl, (_sprite_buff)
	push	hl
	ld	hl, _Duck_A_1_data
	jq	BB9_4
BB9_5:
	ld	hl, _Duck_A_2_data
	ld	(ix + -3), hl
	ld	de, (_i)
	ld	bc, 23
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	hl, (iy + 20)
	ld	bc, 2
	or	a, a
	sbc	hl, bc
	jq	nz, BB9_25
	ld	hl, (_sprite_buff)
	push	hl
	ld	hl, _Duck_A_2_data
	jq	BB9_4
BB9_7:
	ld	hl, _Duck_A_3_data
	ld	(ix + -3), hl
	ld	de, (_i)
	ld	bc, 23
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	hl, (iy + 20)
	ld	bc, 2
	or	a, a
	sbc	hl, bc
	jq	nz, BB9_25
	ld	hl, (_sprite_buff)
	push	hl
	ld	hl, _Duck_A_3_data
	jq	BB9_4
BB9_9:
	ld	hl, _Duck_B_1_data
	ld	(ix + -3), hl
	ld	de, (_i)
	ld	bc, 23
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	hl, (iy + 20)
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	jq	nz, BB9_25
	ld	hl, (_sprite_buff)
	push	hl
	ld	hl, _Duck_B_1_data
	jq	BB9_4
BB9_11:
	ld	hl, _Duck_B_2_data
	ld	(ix + -3), hl
	ld	de, (_i)
	ld	bc, 23
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	hl, (iy + 20)
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	jq	nz, BB9_25
	ld	hl, (_sprite_buff)
	push	hl
	ld	hl, _Duck_B_2_data
	jq	BB9_4
BB9_13:
	ld	hl, _Duck_B_3_data
	ld	(ix + -3), hl
	ld	de, (_i)
	ld	bc, 23
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	hl, (iy + 20)
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	jq	nz, BB9_25
	ld	hl, (_sprite_buff)
	push	hl
	ld	hl, _Duck_B_3_data
BB9_4:
	push	hl
	call	_gfx_FlipSpriteY
	pop	hl
	pop	hl
	ld	hl, (_sprite_buff)
	jq	BB9_17
BB9_15:
	ld	hl, _Duck_Fall_1_data
	jq	BB9_17
BB9_16:
	ld	hl, _Duck_Shot_data
	jq	BB9_17
BB9_18:
	ld	hl, _Duck_Fall_2_data
BB9_17:
	ld	(ix + -3), hl
	ld	de, (_i)
BB9_25:
	ld	bc, 23
	ex	de, hl
	call	__imulu
	push	hl
	pop	de
	ld	hl, _enemies
	push	hl
	pop	iy
	add	iy, de
	ld	hl, (iy + 2)
	ld	de, (iy + 5)
	push	de
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_gfx_TransparentSprite
	pop	hl
	pop	hl
	pop	hl
BB9_26:
	ld	hl, 1
	ld	(ix + 6), hl
	pop	hl
	pop	ix
	jp	_delay
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI9_0:
	private	LJTI9_0
LJTI9_0:
	dl	BB9_2
	dl	BB9_5
	dl	BB9_7
	dl	BB9_9
	dl	BB9_11
	dl	BB9_13
	dl	BB9_16
	dl	BB9_15
	dl	BB9_18

	section	.text,"ax",@progbits
	public	_set_dog_mode
_set_dog_mode:
	ld	hl, -3
	call	__frameset
	ld	de, (ix + 6)
	ld	iy, 91
	ld	(_dog+15), de
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_7
	ld	de, (_dog)
	ld	bc, (_dog+6)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_23
	ld	iy, (_dog+3)
	ld	bc, (_dog+9)
	lea	hl, iy + 0
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_23
	ld	bc, 141
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_15
	ld	bc, 189
	lea	hl, iy + 0
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_15
	ld	hl, 239
	jq	BB10_6
BB10_7:
	ld	bc, 2
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_9
	ld	hl, 80
	ld	(_dog), hl
	ld	hl, 160
	ld	(_dog+3), hl
	jq	BB10_23
BB10_9:
	ld	(ix + -3), iy
	ld	bc, 3
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_23
	ld	hl, 159
	ld	iy, _enemies
	ld	(_dog+3), hl
	ld	hl, (_fallen_id)
	ld	bc, 23
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	de, (iy + 2)
	ld	bc, 91
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB10_13
	ld	bc, 220
	ex	de, hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB10_14
	ld	hl, 219
	ld	(ix + -3), hl
BB10_13:
	ld	hl, (ix + -3)
	ld	(_dog), hl
BB10_14:
	ld	hl, 139
BB10_6:
	ld	(_dog+9), hl
	jq	BB10_23
BB10_15:
	ld	bc, 101
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_19
	ld	bc, 139
	lea	hl, iy + 0
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_19
	ld	hl, 141
	ld	de, 189
	jq	BB10_18
BB10_19:
	ld	bc, 91
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB10_22
	ld	de, 160
	lea	hl, iy + 0
	or	a, a
	sbc	hl, de
	jq	nz, BB10_22
	ld	hl, 101
	ld	de, 140
BB10_18:
	ld	(_dog+6), hl
	ld	(_dog+9), de
	jq	BB10_23
BB10_22:
	ld	hl, 32
	ld	(_dog), hl
	ld	hl, 160
	ld	(_dog+3), hl
	ld	(_dog+9), hl
	ld	hl, 91
	ld	(_dog+6), hl
BB10_23:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw_dog
_draw_dog:
	ld	hl, (_dog+15)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB11_17
	ld	de, 1
	or	a, a
	sbc	hl, de
	jq	nz, BB11_16
	ld	iy, 1
	ld	de, (_dog)
	ld	bc, (_dog+6)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB11_4
	push	iy
	call	_set_dog_mode
	pop	hl
	jq	BB11_9
BB11_4:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB11_6
	ld	hl, (_dog+12)
	add	hl, de
	jq	BB11_8
BB11_6:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB11_9
	ld	bc, (_dog+12)
	ex	de, hl
	or	a, a
	sbc	hl, bc
BB11_8:
	ld	(_dog), hl
BB11_9:
	ld	de, (_dog+3)
	ld	bc, (_dog+9)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB11_11
	ld	hl, 1
	push	hl
	call	_set_dog_mode
	pop	hl
	jq	BB11_16
BB11_11:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB11_13
	ld	hl, (_dog+12)
	add	hl, de
	jq	BB11_15
BB11_13:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB11_16
	ld	bc, (_dog+12)
	ex	de, hl
	or	a, a
	sbc	hl, bc
BB11_15:
	ld	(_dog+3), hl
BB11_16:
	ld	hl, -32
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (_dog)
	ld	de, (_dog+3)
	ld	bc, 43
	push	bc
	ld	bc, 51
	push	bc
	push	de
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB11_17:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_shoot
_shoot:
	ld	hl, -30
	call	__frameset
	ld	de, 5
	ld	bc, (_enemies_amount)
	ld	(ix + -3), bc
	ld	hl, (_player)
	push	hl
	pop	iy
	add	iy, de
	ld	(ix + -9), iy
	ld	de, -5
	add	hl, de
	ld	(ix + -12), hl
	ld	hl, (_player+3)
	push	hl
	pop	iy
	ld	de, 5
	add	iy, de
	ld	de, -5
	add	hl, de
	ld	(ix + -18), hl
	ld	de, 1
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	bc, 0
	call	__setflag
	jq	p, BB12_2
	ld	(ix + -3), bc
BB12_2:
	ld	hl, _timers
	ld	(ix + -6), hl
	ld	de, _enemies+11
	ld	(ix + -15), iy
BB12_3:
	ld	hl, (ix + -3)
	or	a, a
	sbc	hl, bc
	jq	z, BB12_11
	push	de
	pop	iy
	ld	a, (iy + -10)
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jq	nz, BB12_10
	ld	(ix + -21), bc
	ld	bc, (iy + -9)
	push	bc
	pop	hl
	ld	de, 33
	add	hl, de
	ld	(ix + -24), hl
	ld	(ix + -27), bc
	push	bc
	pop	hl
	ld	bc, (ix + -21)
	ld	de, (ix + -9)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB12_10
	ld	de, (ix + -24)
	ld	hl, (ix + -12)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB12_10
	ld	hl, (iy + -6)
	ld	(ix + -24), hl
	ld	hl, (ix + -24)
	ld	de, 23
	add	hl, de
	ld	(ix + -30), hl
	ld	hl, (ix + -24)
	ld	de, (ix + -15)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB12_10
	ld	de, (ix + -30)
	ld	hl, (ix + -18)
	or	a, a
	sbc	hl, de
	ld	hl, 0
	call	__setflag
	jq	m, BB12_9
BB12_10:
	inc	bc
	lea	iy, iy + 23
	lea	de, iy + 0
	ld	iy, (ix + -6)
	lea	iy, iy + 3
	ld	(ix + -6), iy
	jq	BB12_3
BB12_11:
	ld	hl, (ix + -3)
	ld	(_i), hl
BB12_12:
	ld	sp, ix
	pop	ix
	ret
BB12_9:
	ld	(_i), bc
	ld	(iy + 9), hl
	ld	de, 180
	ld	(iy + 3), de
	ld	de, (ix + -27)
	ld	(iy), de
	ld	de, 3
	ld	(iy + -3), de
	ld	(iy + -10), 1
	ld	iy, (ix + -6)
	ld	(iy), hl
	ld	hl, -1
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	iy, (_player)
	ld	hl, -10
	ex	de, hl
	add	iy, de
	ld	hl, (_player+3)
	add	hl, de
	ld	de, 20
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	pop	hl
	jq	BB12_12
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_init_enemies
_init_enemies:
	ld	hl, -9
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (ix + 9)
	ld	iy, _enemies
	ld	de, 0
	ld	(_enemies_amount), bc
	ld	(_lvl), hl
BB13_1:
	ld	(_i), de
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB13_24
	ex	de, hl
	ld	de, 23
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	lea	hl, iy + 0
	add	hl, de
	ld	(hl), 1
	call	_random
	ld	iy, _enemies
	ld	bc, 223
	call	__iremu
	ld	(ix + -3), hl
	ld	de, 32
	add	hl, de
	ld	(ix + -6), hl
	ld	de, (_i)
	push	de
	pop	hl
	ld	bc, 23
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix + -9), iy
	ld	hl, (ix + -6)
	ld	(iy + 2), hl
	ld	hl, (ix + -3)
	ld	bc, 222
	or	a, a
	sbc	hl, bc
	jq	c, BB13_4
	push	de
	pop	hl
	ld	bc, 23
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	bc, (iy + 11)
	ld	hl, 253
	or	a, a
	sbc	hl, bc
	ld	iy, (ix + -9)
	ld	(iy + 2), hl
BB13_4:
	ex	de, hl
	ld	de, 23
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	iy, _enemies
	add	iy, de
	ld	hl, 167
	ld	(iy + 5), hl
	ld	hl, 1
	ld	(iy + 20), hl
	call	_random
	ld	bc, 223
	call	__iremu
	ld	de, 32
	add	hl, de
	ld	(ix + -3), hl
	ld	hl, (_i)
	ld	bc, 23
	call	__imulu
	push	hl
	pop	de
	ld	iy, _enemies
	add	iy, de
	ld	hl, (ix + -3)
	ld	(iy + 11), hl
	call	_random
	ld	bc, 160
	call	__iremu
	ld	de, 8
	add	hl, de
	ex	de, hl
	ld	hl, (_i)
	ld	(ix + -3), hl
	ld	bc, 23
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	(iy + 14), de
	ld	(iy + 1), 0
	or	a, a
	sbc	hl, hl
	ld	(_amount_fallen), hl
	ld	bc, 1
	ld	(iy + 17), bc
	ld	iy, (ix + 9)
	lea	hl, iy + 0
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ld	de, 16
	or	a, a
	sbc	hl, de
	jq	c, BB13_9
	lea	hl, iy + 0
	ld	de, 18
	or	a, a
	sbc	hl, de
	call	__setflag
	ld	de, (ix + -3)
	jq	m, BB13_8
	call	_random
	ld	bc, 3
	call	__iremu
	ld	bc, 8
	call	__ior
	ld	de, (_i)
	jq	BB13_7
BB13_9:
	ld	hl, LJTI13_0
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	iy, (hl)
	ld	hl, 1
	ld	de, (ix + -3)
	jp	(iy)
BB13_11:
	ld	hl, 2
	jq	BB13_7
BB13_13:
	ld	hl, 3
	jq	BB13_7
BB13_15:
	ld	hl, 4
	jq	BB13_7
BB13_17:
	ld	hl, 5
	jq	BB13_7
BB13_19:
	ld	hl, 6
	jq	BB13_7
BB13_21:
	ld	hl, 7
	jq	BB13_7
BB13_23:
	ld	hl, 8
BB13_7:
	ld	(ix + -3), hl
	push	de
	pop	hl
	ld	bc, 23
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _enemies
	add	iy, bc
	ld	hl, (ix + -3)
	ld	(iy + 8), hl
BB13_8:
	inc	de
	ld	bc, (_enemies_amount)
	ld	iy, _enemies
	jq	BB13_1
BB13_24:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI13_0:
	private	LJTI13_0
LJTI13_0:
	dl	BB13_7
	dl	BB13_7
	dl	BB13_11
	dl	BB13_11
	dl	BB13_13
	dl	BB13_13
	dl	BB13_15
	dl	BB13_15
	dl	BB13_17
	dl	BB13_17
	dl	BB13_19
	dl	BB13_19
	dl	BB13_21
	dl	BB13_21
	dl	BB13_23
	dl	BB13_23

	section	.text,"ax",@progbits
	public	_player_keys_other
_player_keys_other:
	ld	hl, -3
	call	__frameset
	ld	iy, -720866
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	3, a
	jq	z, BB14_8
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	2, a
	jq	z, BB14_8
	ld	hl, (_player+3)
	ld	de, (_player+9)
	ld	(ix + -3), de
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 17
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB14_4
	ld	de, 16
BB14_4:
	ld	(_player+3), de
	ld	iy, (_player)
	ld	de, (ix + -3)
	add	iy, de
	lea	hl, iy + 0
	ld	de, 279
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB14_6
	ld	(_player), iy
	jq	BB14_7
BB14_6:
	ld	hl, 279
	ld	(_player), hl
BB14_7:
	ld	iy, -720866
BB14_8:
	ld.sis	bc, 1
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	3, a
	jq	z, BB14_16
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	1, a
	jq	z, BB14_16
	ld	hl, (_player+3)
	ld	de, (_player+9)
	ld	(ix + -3), de
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 17
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB14_12
	ld	de, 16
BB14_12:
	ld	(_player+3), de
	ld	hl, (_player)
	ld	de, (ix + -3)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 41
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB14_14
	ld	(_player), de
	jq	BB14_15
BB14_14:
	ld	hl, 40
	ld	(_player), hl
BB14_15:
	ld.sis	bc, 1
BB14_16:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	e, c
	ld	d, b
	call	__sand
	ld	c, 1
	ld	a, l
	xor	a, c
	bit	0, a
	jq	nz, BB14_24
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	2, a
	jq	z, BB14_24
	ld	bc, (_player+3)
	ld	iy, (_player+9)
	ld	(ix + -3), iy
	add	iy, bc
	lea	hl, iy + 0
	ld	bc, 222
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB14_20
	ld	iy, 222
BB14_20:
	ld	(_player+3), iy
	ld	iy, (_player)
	ld	bc, (ix + -3)
	add	iy, bc
	lea	hl, iy + 0
	ld	bc, 279
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB14_22
	ld	(_player), iy
	jq	BB14_23
BB14_22:
	ld	hl, 279
	ld	(_player), hl
BB14_23:
	ld	iy, -720866
BB14_24:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	c, e
	ld	b, d
	call	__sand
	ld	a, l
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB14_31
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	1, a
	jq	z, BB14_31
	ld	bc, (_player+3)
	ld	de, (_player+9)
	push	de
	pop	iy
	add	iy, bc
	lea	hl, iy + 0
	ld	bc, 222
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB14_28
	ld	iy, 222
BB14_28:
	ld	(_player+3), iy
	ld	hl, (_player)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 41
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	m, BB14_30
	ld	(_player), de
	jq	BB14_31
BB14_30:
	ld	hl, 40
	ld	(_player), hl
BB14_31:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 32
	call	z, _shoot
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_sprite_buff_data
_sprite_buff_data:
	rb	4902

	section	.data,"aw",@progbits
	public	_sprite_buff
_sprite_buff:
	dl	_sprite_buff_data

	section	.bss,"aw",@nobits
	public	_ext
_ext:
	rb	3

	section	.bss,"aw",@nobits
	public	_key
_key:
	rb	1

	section	.bss,"aw",@nobits
	public	_enemies
_enemies:
	rb	230

	section	.bss,"aw",@nobits
	public	_timers
_timers:
	rb	30

	section	.bss,"aw",@nobits
	public	_i
_i:
	rb	3

	section	.bss,"aw",@nobits
	public	_dog
_dog:
	rb	21

	section	.bss,"aw",@nobits
	public	_fallen_id
_fallen_id:
	rb	3

	section	.bss,"aw",@nobits
	public	_enemies_amount
_enemies_amount:
	rb	3

	section	.bss,"aw",@nobits
	public	_player
_player:
	rb	15

	section	.bss,"aw",@nobits
	public	_amount_fallen
_amount_fallen:
	rb	3

	section	.bss,"aw",@nobits
	public	_lvl
_lvl:
	rb	3

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"x:",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"dy:",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"a:",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project a4fd568b012f0b193e341952bf10624f559064fd)"
	extern	_random
	extern	__Unwind_SjLj_Register
	extern	_Duck_B_3_data
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	_gfx_SetPalette
	extern	_Duck_Shot_data
	extern	__sand
	extern	_gfx_PrintString
	extern	_palette
	extern	_gfx_PrintInt
	extern	__setflag
	extern	_gfx_Blit
	extern	_Duck_A_2_data
	extern	_gfx_Circle
	extern	_gfx_FillRectangle
	extern	_delay
	extern	_Duck_B_1_data
	extern	_free
	extern	__frameset
	extern	_gfx_SetTransparentColor
	extern	_kb_Scan
	extern	_Duck_A_3_data
	extern	__ior
	extern	_Duck_Fall_1_data
	extern	_gfx_FlipSpriteY
	extern	_Duck_B_2_data
	extern	_gfx_SetDraw
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	__iremu
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_Rectangle
	extern	_gfx_End
	extern	_gfx_SetTextXY
	extern	__frameset0
	extern	_gfx_TransparentSprite
	extern	_Duck_Fall_2_data
	extern	_Duck_A_1_data
